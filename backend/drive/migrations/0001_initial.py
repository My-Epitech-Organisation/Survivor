# Generated by Django 5.2.5 on 2025-09-09 12:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("admin_panel", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DriveFolder",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Name of the folder", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the folder was created")),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created the folder",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_folders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent folder (null for root folders)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subfolders",
                        to="drive.drivefolder",
                    ),
                ),
                (
                    "startup",
                    models.ForeignKey(
                        help_text="The startup this folder belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drive_folders",
                        to="admin_panel.startupdetail",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("startup", "parent", "name")},
            },
        ),
        migrations.CreateModel(
            name="DriveFile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Name of the file with extension", max_length=255)),
                ("file", models.FileField(help_text="The actual file content", upload_to="drive_files/%Y/%m/%d/")),
                ("size", models.PositiveBigIntegerField(help_text="Size of the file in bytes")),
                ("file_type", models.CharField(help_text="MIME type of the file", max_length=100)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True, help_text="When the file was uploaded")),
                ("last_modified", models.DateTimeField(auto_now=True, help_text="When the file was last modified")),
                ("description", models.TextField(blank=True, help_text="Optional description of the file", null=True)),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False, help_text="Whether the file is archived (hidden but not deleted)"
                    ),
                ),
                (
                    "startup",
                    models.ForeignKey(
                        help_text="The startup this file belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drive_files",
                        to="admin_panel.startupdetail",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        help_text="User who uploaded the file",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        blank=True,
                        help_text="Folder containing this file (null for root files)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="files",
                        to="drive.drivefolder",
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
                "unique_together": {("startup", "folder", "name")},
            },
        ),
        migrations.CreateModel(
            name="DriveActivity",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("upload", "Upload"),
                            ("download", "Download"),
                            ("rename", "Rename"),
                            ("move", "Move"),
                            ("delete", "Delete"),
                            ("restore", "Restore"),
                            ("share", "Share"),
                            ("unshare", "Unshare"),
                            ("create_folder", "Create Folder"),
                        ],
                        help_text="The type of action performed",
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, help_text="When the action was performed")),
                (
                    "details",
                    models.JSONField(
                        blank=True, help_text="Additional details about the action (JSON format)", null=True
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of the user who performed the action", null=True
                    ),
                ),
                (
                    "startup",
                    models.ForeignKey(
                        help_text="The startup related to this activity",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drive_activities",
                        to="admin_panel.startupdetail",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who performed the action",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="drive_activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        help_text="The file involved in the activity (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activities",
                        to="drive.drivefile",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        blank=True,
                        help_text="The folder involved in the activity (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activities",
                        to="drive.drivefolder",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DriveShare",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("shared_at", models.DateTimeField(auto_now_add=True, help_text="When the share was created")),
                (
                    "access_token",
                    models.CharField(
                        help_text="Unique token for accessing the shared item", max_length=64, unique=True
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When the share expires (null for no expiration)", null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True, help_text="Whether the share is currently active")),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        help_text="The file being shared (null if sharing a folder)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="drive.drivefile",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        blank=True,
                        help_text="The folder being shared (null if sharing a file)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="drive.drivefolder",
                    ),
                ),
                (
                    "shared_by",
                    models.ForeignKey(
                        help_text="User who created the share",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drive_shares",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("file__isnull", False), ("folder__isnull", False), _connector="OR"),
                        name="share_either_file_or_folder",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("file__isnull", False), ("folder__isnull", False), _negated=True),
                        name="share_not_both_file_and_folder",
                    ),
                ],
            },
        ),
    ]
